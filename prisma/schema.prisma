// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid())
  userName String
  email    String    @unique
  password String    @db.VarChar(255)
  sessions Session[]
  chatlogs ChatLog[]
  moodArts MoodArt[]
  streaks  Streak[]
}

model Session {
  id        String       @id @default(uuid())
  createdAt DateTime     @default(now()) @map("created_at") @db.Timestamp(3)
  user      User?        @relation(fields: [userId], references: [id])
  userId    String?
  tags      SessionTag[]
  isDeleted Boolean      @default(false)
}

model SessionTag {
  id        String      @id @default(uuid())
  session   Session     @relation(fields: [sessionId], references: [id])
  sessionId String
  tag       SessionType
}

enum SessionType {
  CHAT
  CBTEXERCISE
  MOODDIARY
}

model ChatLog {
  id        String   @id @default(uuid())
  sender    Role
  message   String
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(3)
  isDeleted Boolean  @default(false)
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

enum Role {
  USER
  PKATHOEY
}

model MoodArt {
  id           String        @id @default(uuid())
  moodColor    EmotionColor
  moodTriggers MoodTrigger[]
  title        String?
  note         String?
  day          DateTime      @db.Date // stored as just date (no time)
  User         User?         @relation(fields: [userId], references: [id])
  userId       String?
}

model MoodTrigger {
  id        String      @id @default(uuid())
  tag       TriggerType
  moodArts  MoodArt     @relation(fields: [moodArtId], references: [id])
  moodArtId String
}

enum EmotionColor {
  ANGRY
  ANXIOUS
  CALM
  EXCITED
  GRATEFUL
  HOPEFUL
  LOVED
  RELAXED
  SAD
  STRESSED
  TIRED
}

enum TriggerType {
  FAMILY
  NEWS
  HEALTH
  WORK
  FRIENDS
  PARTICIPATION
  SELF
  RELATIONSHIPS
  ACTIVITIES
  INDEPENDENCE
}

model Streak {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(3)
  updatedAt DateTime @updatedAt @map("updated_at")
  daysCount Int
  dayMood   String
  moodColor String

  user   User?   @relation(fields: [userId], references: [id])
  userId String?
}

//optional
// model CBTExercise {
//   id           String         @id @default(uuid())
//   exerciseType ExerciseType[]
//   userResponse String
//   createdAt    DateTime       @default(now()) @map("created_at") @db.Timestamp(3)
// }

// model MentalState {
//   id          String        @id @default(uuid())
//   refId       refId[]
//   sessionType SessionType[]
//   isCrisis    Boolean
//   detectedAt  DateTime
// }
